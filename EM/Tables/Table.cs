// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;

using MySql.Data.MySqlClient;

namespace EM {

	public class Table {

		private String name;
		private List<Column> column =  new List<Column>();

		public Table(){}

		public Table(String name){
			this.name = name;
		}

		public void addColumn(Column column){
			this.column.Add(column);
		}

		public String getCreateTable(){
			String sql = "Create table if not exists `"+name+"` (";

			for(int i=0; i < this.column.Count; i++){
				sql += "`"+this.column[i].name+"` "+this.column[i].GetTypeColumn();
				if((i + 1) < this.column.Count)
					sql += ",";
			}

			sql += ");";
			return sql;
		}

		public void insert(List<Value> values){
			String sql = getInsert (values);
			MyConnection mc = MyConnection.GetInstance ();
			mc.Execute (sql);
		}

		public List<Result> select(){
			return this.selectFrom (this.column);
		}

		public List<Result> select(List<Column> column){
			return this.selectFrom (column);
		}

		private List<Result> selectFrom(List<Column> column){
			List<Result> resultado = new List<Result> ();
			String sql = getSelect (column);
			//Console.WriteLine (sql);
			
			MyConnection mc = MyConnection.GetInstance ();
			
			MySqlDataReader dataReader = mc.GetResult (sql);
			
			
			while (dataReader.Read()) {
				Result r = new Result();
				foreach(Column cc in column){
					Value v = new Value();
					v.setColumn(cc);
					v.setValue(cc.type, dataReader[cc.name]);
					//Console.WriteLine(v.getValue());
					r.addValue(v);
				}
				
				
				resultado.Add(r);
			}
			
			dataReader.Close();
			
			return resultado;
		}

		private List<Result> selectFrom(List<Column> column, String Where){
			List<Result> resultado = new List<Result> ();
			String sql = getSelect (column, Where);
			
			
			MyConnection mc = MyConnection.GetInstance ();
			
			MySqlDataReader dataReader = mc.GetResult (sql);
			
			
			while (dataReader.Read()) {
				Result r = new Result();
				foreach(Column cc in column){
					Value v = new Value();
					v.setColumn(cc);
					v.setValue(cc.type, dataReader[cc.name]);
					r.addValue(v);
				}
				resultado.Add(r);
			}
			
			dataReader.Close();

			mc.CloseConnection ();
			
			return resultado;
		}

		private String getSelect(List<Column> column, String Where){
			String sql = "Select ";
			for(int i=0; i < column.Count; i++){
				sql += "`"+column[i].name+"` ";
				if((i + 1) < column.Count)
					sql += ",";
			}
			
			sql += " FROM `"+this.name+"` WHERE "+Where+";";
			
			return sql;
		}

		private String getInsert(List<Value> values){
			try{
				String sql = "Insert into `"+this.name+"` (";
				String Values = "";
				for(int i=0; i < column.Count; i++){
					sql += "`"+column[i].name+"` ";
					foreach(Value vv in values){
						if(vv.getColumn().name.Equals(column[i].name)){
							Values += "'"+values[i].getValue().ToString()+"' ";
						}
					}
					if((i + 1) < column.Count){
						sql += ",";
						Values += ",";
					}
				}
				
				sql += ") VALUES ( "+Values+" );";
			
			
				return sql;
			}catch(Exception){
				
			}

			return "";
		}

		private String getSelect(List<Column> column){
			String sql = "Select ";
			for(int i=0; i < column.Count; i++){
				sql += "`"+column[i].name+"` ";
				if((i + 1) < column.Count)
					sql += ",";
			}

			sql += " FROM `"+this.name+"` WHERE 1;";

			//Console.WriteLine (sql);

			return sql;
		}



	}


}

